{"version":3,"file":"static/js/178.fd2fea80.chunk.js","mappings":"iRAGaA,EAAyBC,EAAAA,EAAAA,GAAH,qGAMtBC,GAAwBD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,wPAWrBG,EAAoBH,EAAAA,EAAAA,MAAH,wEAKjBI,GAAoBJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,maAkBjBM,EAAkBN,EAAAA,EAAAA,OAAH,oW,UCmB5B,EAjDqB,WACnB,IAAMO,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KACNG,MAAOH,EAAAA,KACPI,UAAWJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,MAG/BC,GAAWC,EAAAA,EAAAA,MAajB,OACE,iCACE,SAACjB,EAAD,iCACA,SAAC,KAAD,CACEkB,cAfgB,CACpBP,KAAM,GACNC,MAAO,GACPO,SAAU,IAaNC,iBAAkBZ,EAClBa,SAXe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BP,GAASQ,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAKG,UAKE,UAACrB,EAAD,CAAuBuB,aAAa,MAApC,WACE,UAACrB,EAAD,CAAmBsB,QAAQ,OAA3B,kBAEE,SAACrB,EAAD,CAAmBsB,KAAK,OAAOhB,KAAK,OAAOiB,WAAS,EAACC,UAAQ,QAE/D,UAACzB,EAAD,CAAmBsB,QAAQ,QAA3B,mBAEE,SAACrB,EAAD,CAAmBsB,KAAK,QAAQhB,KAAK,QAAQkB,UAAQ,QAEvD,UAACzB,EAAD,CAAmBsB,QAAQ,WAA3B,sBAEE,SAACrB,EAAD,CAAmBsB,KAAK,WAAWhB,KAAK,WAAWkB,UAAQ,QAG7D,SAACtB,EAAD,CAAiBoB,KAAK,SAAtB,4BAKT,E,UC3CD,EAZqB,WACnB,OACE,iCACE,SAAC,EAAD,KAEA,SAAC,EAAAG,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/registerForm/RegisterForm.styled.js","components/registerForm/RegisterFrom.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const RegisterFormFormHeader = styled.h2`\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 8px;\n`;\n\nexport const RegisterFormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  margin-bottom: 12px;\n  padding: 12px;\n  border: 1px solid var(--border-color);\n  background-color: var(--bcg-color);\n`;\n\nexport const RegisterFormLabel = styled.label`\n  margin-bottom: 12px;\n  letter-spacing: 4px;\n`;\n\nexport const RegisterFormInput = styled(Field)`\n  display: block;\n  width: 300px;\n  margin-top: 8px;\n  padding: 4px;\n  color: var(--text-color);\n  background-color: inherit;\n  border: 2px solid var(--border-color);\n  cursor: zoom-in;\n  transition: width 250ms cubic-bezier(0.5, 0, 0.75, 0) 25ms;\n  &:focus,\n  &:hover {\n    width: 500px;\n    outline: 1px solid var(--accent-color);\n    box-shadow: 0 0 20px var(--add-color);\n  }\n`;\n\nexport const RegisterFormBtm = styled.button`\n  padding: 4px 12px;\n  color: var(--text-color);\n  font-size: inherit;\n  font-weight: bold;\n  background-color: initial;\n  border: 2px solid var(--add-color);\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 0 20px var(--add-color);\n    border-color: var(--border-color);\n    outline: 1px solid var(--accent-color);\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperation';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport {\n  RegisterFormFormHeader,\n  RegisterFormContainer,\n  RegisterFormLabel,\n  RegisterFormInput,\n  RegisterFormBtm,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const schema = yup.object().shape({\n    name: yup.string(),\n    email: yup.string(),\n    passwordr: yup.string().min(5).max(10),\n  });\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <RegisterFormFormHeader>Create an account</RegisterFormFormHeader>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <RegisterFormContainer autoComplete=\"off\">\n          <RegisterFormLabel htmlFor=\"name\">\n            Name\n            <RegisterFormInput type=\"text\" name=\"name\" autoFocus required />\n          </RegisterFormLabel>\n          <RegisterFormLabel htmlFor=\"email\">\n            Email\n            <RegisterFormInput type=\"email\" name=\"email\" required />\n          </RegisterFormLabel>\n          <RegisterFormLabel htmlFor=\"password\">\n            Password\n            <RegisterFormInput type=\"password\" name=\"password\" required />\n          </RegisterFormLabel>\n\n          <RegisterFormBtm type=\"submit\">Sign Up</RegisterFormBtm>\n        </RegisterFormContainer>\n      </Formik>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport RegisterForm from 'components/registerForm/RegisterFrom';\nimport Loader from 'components/loader/Loader';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterFormFormHeader","styled","RegisterFormContainer","Form","RegisterFormLabel","RegisterFormInput","Field","RegisterFormBtm","schema","yup","shape","name","email","passwordr","min","max","dispatch","useDispatch","initialValues","password","validationSchema","onSubmit","values","resetForm","register","autoComplete","htmlFor","type","autoFocus","required","Suspense","fallback","Loader"],"sourceRoot":""}